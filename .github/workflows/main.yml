name: OCI Terraform Deploy

on:
  push:
    paths:
      - 'path/to/your/terraform/file.tf'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 2.0.3

      - name: Install OCI CLI
        run: |
          sudo pip install oci-cli

      - name: Set up OCI credentials
        env:
          OCI_CLI_AUTH: 'api_key'
          OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
          OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
          OCI_CLI_KEY_FILE: ${{ secrets.OCI_CLI_KEY_FILE }}
          OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
          OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
        run: |
          mkdir -p ~/.oci
          echo "${OCI_CLI_KEY_FILE}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          oci setup config --user $OCI_CLI_USER --fingerprint $OCI_CLI_FINGERPRINT --key-file ~/.oci/oci_api_key.pem --tenancy $OCI_CLI_TENANCY --region $OCI_CLI_REGION

      - name: Initialize Terraform
        run: terraform init app/terraform/providers.tf

      - name: Apply Terraform
        run: terraform apply -auto-approve app/terraform/providers.tf
        env:
          TF_VAR_user_ocid: ${{ secrets.OCI_CLI_USER }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_CLI_TENANCY }}
          TF_VAR_fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
          TF_VAR_private_key_path: ~/.oci/oci_api_key.pem
